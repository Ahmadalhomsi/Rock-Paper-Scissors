/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.prolap1;

import javax.swing.ImageIcon;
import java.util.*;
import javax.swing.JFrame;
import java.awt.*;

/**
 *
 * @author pooqw
 */
public class Buttoner extends javax.swing.JFrame {
    
    ImageIcon R1pic = new ImageIcon("src\\Pic\\R1.png");
    ImageIcon R1Upic = new ImageIcon("src\\Pic\\R1U.png");
    ImageIcon P1pic = new ImageIcon("src\\Pic\\P1.png");
    ImageIcon P1Upic = new ImageIcon("src\\Pic\\P1U.png");
    ImageIcon S1pic = new ImageIcon("src\\Pic\\S1.png");
    ImageIcon S1Upic = new ImageIcon("src\\Pic\\S1U.png");
    
    /**
     * Creates new form Buttoner
     */
    int count = 0; // total play count
    int tcount=0; // Toplam Hamle Sayisi
    int fcount = 1;
    int karr[] = new int[5];

    int ccr = 0; // Rock class counter for kullanci
    int ccp = 0; // Paper class counter for kullanci
    int ccs = 0; // Scissors class counter for kullanci

    int ccrb = 0; // Rock class counter for bilgisayar
    int ccpb = 0; // Paper class counter for bilgisayar
    int ccsb = 0; // Scissors class counter for bilgisayar
    
    int ccr2 = 0; // Agir Tas class counter for bilgisayar
    int ccp2 = 0; // Ozel Kagit class counter for bilgisayar
    int ccs2 = 0; // Usta Makas class counter for bilgisayar
    
    int ccr2b = 0; // Agir Tas class counter for bilgisayar
    int ccp2b = 0; // Ozel Kagit class counter for bilgisayar
    int ccs2b = 0; // Usta Makas class counter for bilgisayar

    int ksec = 0; // kullanci Sectigi nesne (Oyun esnasinda) 

    Oyun oyun = new Oyun();

    public Buttoner() {
        initComponents();

        
        BCenter1.setIcon(R1pic);
        BCenter2.setIcon(P1pic);
        BCenter3.setIcon(S1pic);
        jLabel3.setVisible(false);
        klabel.setVisible(false);
        //BgetterX(); // it gets the bilgisayar random selections

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        B5 = new javax.swing.JButton();
        B1 = new javax.swing.JButton();
        B3 = new javax.swing.JButton();
        B4 = new javax.swing.JButton();
        B2 = new javax.swing.JButton();
        BCenter1 = new javax.swing.JButton();
        BCenter2 = new javax.swing.JButton();
        BCenter3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        BCenter = new javax.swing.JButton();
        BCenterb = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        kdLabel = new javax.swing.JLabel();
        ksLabel = new javax.swing.JLabel();
        keLabel = new javax.swing.JLabel();
        bsLabel = new javax.swing.JLabel();
        bdLabel = new javax.swing.JLabel();
        beLabel = new javax.swing.JLabel();
        klabel = new javax.swing.JLabel();
        kskLabel = new javax.swing.JLabel();
        bskLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        B5.setBackground(new java.awt.Color(0, 127, 255));
        B5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B5ActionPerformed(evt);
            }
        });

        B1.setBackground(new java.awt.Color(0, 127, 255));
        B1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B1ActionPerformed(evt);
            }
        });

        B3.setBackground(new java.awt.Color(0, 127, 255));
        B3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B3ActionPerformed(evt);
            }
        });

        B4.setBackground(new java.awt.Color(0, 127, 255));
        B4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B4ActionPerformed(evt);
            }
        });

        B2.setBackground(new java.awt.Color(0, 127, 255));
        B2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B2ActionPerformed(evt);
            }
        });

        BCenter1.setBackground(new java.awt.Color(0, 127, 255));
        BCenter1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCenter1ActionPerformed(evt);
            }
        });

        BCenter2.setBackground(new java.awt.Color(0, 127, 255));
        BCenter2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCenter2ActionPerformed(evt);
            }
        });

        BCenter3.setBackground(new java.awt.Color(0, 127, 255));
        BCenter3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCenter3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Kullanici");

        jLabel2.setText("Bilgisayar");

        BCenter.setBackground(new java.awt.Color(0, 127, 255));
        BCenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCenterActionPerformed(evt);
            }
        });

        BCenterb.setBackground(new java.awt.Color(0, 127, 255));
        BCenterb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCenterbActionPerformed(evt);
            }
        });

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setActionCommand("<Not Set>");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Kazanan");

        jLabel4.setText("Hamle Sayisi");

        kdLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        kdLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        kdLabel.setText("D:");

        ksLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ksLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ksLabel.setText("S:");

        keLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        keLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        keLabel.setText("Etki:");

        bsLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bsLabel.setText("S:");

        bdLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bdLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bdLabel.setText("D:");

        beLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        beLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        beLabel.setText("Etki:");

        klabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        klabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        klabel.setText("Kazanan");

        kskLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        kskLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        kskLabel.setText("Skor:");

        bskLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bskLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bskLabel.setText("Skor:");
        bskLabel.setAlignmentX(0.5F);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BCenter1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BCenter2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(kdLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(keLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ksLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(kskLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel1)
                                        .addGap(25, 25, 25)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(B1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(B2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(B3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BCenter, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                                .addComponent(klabel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(B4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(B5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BCenterb, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addGap(30, 30, 30))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bskLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(bdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(beLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addComponent(BCenter3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(33, 33, 33)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(148, 148, 148))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(207, 207, 207))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BCenter3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BCenter2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BCenter1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kskLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(BCenter, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(klabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(B2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(B3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(keLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(kdLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ksLabel)
                                .addGap(30, 30, 30)
                                .addComponent(B1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(beLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel2)
                                        .addGap(14, 14, 14)
                                        .addComponent(bdLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bsLabel))
                                    .addComponent(BCenterb, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(B4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(B5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bskLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    BilgisayarOyuncusu BO = new BilgisayarOyuncusu();
    Kullanici ku = new Kullanici();
    int barr[] = Bilrand();

    private void BgetterX(int karr[]) // kartSec,liste orginizer and more ////ediit 
    {
        
        System.out.println("Array value");
        for (int i = 0; i < barr.length; i++) {
            System.out.print(barr[i] + " ");
            oyun.cnbgenerator(barr[i]);
        }
        System.out.println("");

        for (int i = 0; i < karr.length; i++) {
            System.out.print(karr[i] + " ");
            //cngenerator(karr[i]);
        }
        System.out.println("");

        BO.nesneListesi(barr);

        ku.nesneListesi(karr);

    }
    ArrayList<Integer> tekrarL = new ArrayList<Integer>(5); // Bilgisayar nesne tekrar locker
    int tekrarLc = 0;
    
    private int tkimk() // Toplam Kim Kazandi
    {
        Bos bos = new Bos();
        double ktdayan=0; // Kullanici Toplam dayaniklilik
        double btdayan=0; // Kullanici Toplam dayaniklilik
        int kbos=0;  // Kullanici Bos Element Sayisi
        int bbos=0;  // Bilgisayar Bos Element Sayisi
        
        for (int i = 0; i < oyun.bno.size(); i++) {
            if(barr[i]==99)
                bbos++;
        }
        
        for (int i = 0; i < oyun.kno.size(); i++) {
            if(karr[i]==99)
                kbos++;
        }
        Boolean bcheck =false;
        Boolean kcheck=false;
        
        if(bbos==5)
        {
            bcheck=true; // Bilgisayar is bos
            System.out.println("Sonunda Kazanan: KULLANCI Cunku Bilgisayarin secenekleri tukendi");
            return 3;
        }
            
        
        if(kbos==5)
        {
            kcheck=true; // Kullanici is bos
            System.out.println("Sonunda Kazanan: BILGISAYAR Cunku kullancinin secenekleri tukendi");
            return 3;
        }
            
        
        if(kcheck == false && bcheck == false)
        {
            for (int i = 0; i < oyun.kno.size(); i++)
            {
                if(karr[i]!=99)
                ktdayan=ktdayan+oyun.kno.get(i).getDayanlililk();
            }
            
            
            for (int i = 0; i < oyun.bno.size(); i++)
            {
                if(barr[i]!=99)
                btdayan=btdayan+oyun.bno.get(i).getDayanlililk();
            }
            
            jLabel3.setVisible(true);
            
            if(ktdayan>btdayan)
            {
                System.out.println("SON Dayaniklik toplamdan: Kullanici Kazandi");
                jLabel3.setText("Kullanici Kazandi");
            }
            else if(ktdayan<btdayan)
            {
                System.out.println("SON Dayaniklik toplamdan: Bilgisayar Kazandi");
                jLabel3.setText("Bilgisayar Kazandi");
            }
            else
                System.out.println("SON Dayaniklik toplamdan: Kimse kazanmadi (Esit)");
        }
        
        System.out.println("OYUN BITTI");
        
        B1.setVisible(false);
        B2.setVisible(false);
        B3.setVisible(false);
        B4.setVisible(false);
        B5.setVisible(false);
        
        

        
      return 0;  
    }

    int x; // Bilgisayar Secilen Index
    int bsecilen; // bilgisayar secilen

    double sbd; // Secilen Bilgisayar Dayanakililik
    double sbe; // Secilen bilgisayar Etki

    public void bilplayer() // puts the bilgisayar icon in the center of GUI
    {
        
                if(tcount==0)
        {
          jLabel4.setVisible(false);
          jTextField1.setVisible(false);
          jLabel3.setVisible(false);
          jButton1.setVisible(false);  
        }
     
        // check if bilg has choosed this nesne before
        if (tekrarLc == 5) {
            tekrarL.clear();
            tekrarLc = 0;
        }

        x = BO.nesneSec();
        
        int g=0;
        while ((((tekrarL.contains(x)) == true) || (barr[x]==99))) {
            x = BO.nesneSec();
            
            g++;
            
            if(g==50)
            {
                tkimk();
                break;
            }
                
        }
        
        
        
            
            
        //System.out.println("finished");
        tekrarL.add(x);
        tekrarLc++;
        //System.out.println("TTTTT: " + x);

        System.out.println("Bilgisayar bunu secti (index): " + x);
        System.out.println("Bilgisayar bunu secti (Tip): " + barr[x]);
        bsecilen = barr[x];

        Nesne tempb = oyun.bno.get(x);
        sbe = tempb.etkiHesapla(karr[KS]);
        //System.out.println("\nKullanici dan bilgisayarin etkihesaplaya: " + karr[KS]);
        //System.out.println("\nBilgisayar Nesne dayaniklilik" + tempb.getDayanlililk());
        sbd = tempb.getDayanlililk();
        


        if (barr[x] == 0) {
            BCenterb.setIcon(R1pic);
        } else if (barr[x] == 1) {
            BCenterb.setIcon(P1pic);
        } else if (barr[x] == 2){
            BCenterb.setIcon(S1pic);
        }
        else if (barr[x] == 3){
            BCenterb.setIcon(R1Upic);
        }
        else if (barr[x] == 4){
            BCenterb.setIcon(P1Upic);
        }
        else if (barr[x] == 5){
            BCenterb.setIcon(S1Upic);
        }
        
        else
          BCenterb.setIcon(null);  

    }

    public boolean terfi(int n , int index,char kim) { // n: tip
        
        Boolean f=true;
        
        if (oyun.kno.get(index).getSeviyePuani() < 30 && oyun.bno.get(index).getSeviyePuani() < 30)
        {  

            return false;
        }
        

        if (oyun.kno.get(index).getSeviyePuani() > 30  && kim=='k' && f == true) {
            System.out.println("Kullanici Icin Terfi");
            if(n==0)
            {
                oyun.cngenerator(3);
                oyun.agirTas[ccr2]= new AgirTas(20,0);
                oyun.kno.set(index, oyun.agirTas[ccr2]);
                ccr2++;
                //System.out.println("SSSSSFFFFF AgirTas index:" + index + oyun.kno.get(index));
                
                if(index==0){
                B1.setIcon(R1Upic);
                B1.setEnabled(true);
                karr[index]=3;

                }
         
                else if(index==1){
                B2.setIcon(R1Upic);
                B2.setEnabled(true);
                karr[index]=3;

                }
                else if(index==2){
                B3.setIcon(R1Upic);
                B3.setEnabled(true);
                karr[index]=3;

                }
                else if(index==3){
                B4.setIcon(R1Upic);
                B4.setEnabled(true);
                karr[index]=3;

                }
                else if(index==4){
                B5.setIcon(R1Upic);
                B5.setEnabled(true);
                karr[index]=3; // make for loop
                }
                else{
                    System.out.println("Tas Terfi Icon Error Kullanici");
                }
            }
            
            else if(n==1)
            {
                oyun.cngenerator(4);
                oyun.ozelKagit[ccp2]= new OzelKagit(20,0);
                oyun.kno.set(index, oyun.ozelKagit[ccp2]);
                ccp2++;
                //System.out.println("SSSSSFFFFF OzelKagit index:" + index + oyun.kno.get(index));
                
                if(index==0){
                   B1.setIcon(P1Upic);
                   B1.setEnabled(true);
                   karr[index]=4;

                }
                else if(index==1){
                   B2.setIcon(P1Upic);
                   B2.setEnabled(true);
                   karr[index]=4;
                }
                else if(index==2){
                B3.setIcon(P1Upic);
                B3.setEnabled(true);
                karr[index]=4;
                }
                else if(index==3){
                B4.setIcon(P1Upic);
                B4.setEnabled(true);
                karr[index]=4;
                }
                else if(index==4){
                B5.setIcon(P1Upic);
                B5.setEnabled(true);
                karr[index]=4;
                }
                else{
                    System.out.println("Kagit Terfi Icon Error Kullanici");
                }
            }
            
            
            else if(n==2)
            {
                oyun.cngenerator(5);
                oyun.ustaMakas[ccs2]= new UstaMakas(20,0);
                oyun.kno.set(index, oyun.ustaMakas[ccs2]);
                ccs2++;
                //System.out.println("SSSSSFFFFF UstaMakas index:" + index + oyun.kno.get(index));

                
                if(index==0){
                B1.setIcon(S1Upic);
                B1.setEnabled(true);
                karr[index]=5;
                }
                else if(index==1){
                B2.setIcon(S1Upic);
                B2.setEnabled(true);
                karr[index]=5;
                }
                else if(index==2){
                B3.setIcon(S1Upic);
                B3.setEnabled(true);
                karr[index]=5;
                }
                else if(index==3){
                B4.setIcon(S1Upic);
                B4.setEnabled(true);
                karr[index]=5;
                }
                else if(index==4){
                B5.setIcon(S1Upic); // Enabling
                B5.setEnabled(true);
                karr[index]=5;
                }
                else{
                    System.out.println("Makas Terfi Icon Error Kullanici");
                }
            }
            
            else
            {
                System.out.println("Terfi Error Kullanici");
            }
        }

        else if (oyun.bno.get(index).getSeviyePuani() > 30 && kim=='b' && f == true) {
            
            System.out.println("Bilgisayar icin terfi 5555555");           
            if(n==0)
            {
                oyun.cnbgenerator(3);
                oyun.agirTas[ccr2b]= new AgirTas(20,0);
                oyun.bno.set(index, oyun.agirTas[ccr2b]);
                ccr2b++;
                System.out.println("AgirTas index:" + index + oyun.bno.get(index));
                
                if(index==0){
                /*
                B1.setIcon(R1Upic);
                B1.setEnabled(true); // what to do instead this: TekrarLc galibaa
                    */
                barr[index]=3;
                }
         
                else if(index==1){
                    /*
                B2.setIcon(R1Upic);
                B2.setEnabled(true);
                    */
                barr[index]=3;
                }
                
                else if(index==2){
                /*    
                B3.setIcon(R1Upic);
                B3.setEnabled(true);
                    */
                barr[index]=3;
                }
                else if(index==3){
                    /*
                B4.setIcon(R1Upic);
                B4.setEnabled(true);
                    */
                barr[index]=3;
                }
                else if(index==4){
                    /*
                B5.setIcon(R1Upic);
                B5.setEnabled(true);
                    */
                barr[index]=3; // make for loop
                }
                else{
                    System.out.println("Tas Terfi Icon Error Bilgisayar");
                }
            }
            
            else if(n==1)
            {
                oyun.cnbgenerator(4);
                oyun.ozelKagit[ccp2b]= new OzelKagit(20,0);
                oyun.bno.set(index, oyun.ozelKagit[ccp2b]);
                ccp2b++;
                System.out.println("OzelKagit index:" + index + oyun.bno.get(index));
                
                if(index==0){
                    /*
                   B1.setIcon(P1Upic);
                   B1.setEnabled(true);
                    */
                   barr[index]=4;
                }
                else if(index==1){
                    /*
                   B2.setIcon(P1Upic);
                   B2.setEnabled(true);
                    */
                   barr[index]=4;
                }
                else if(index==2){
                    /*
                B3.setIcon(P1Upic);
                B3.setEnabled(true);
                    */
                barr[index]=4;
                }
                else if(index==3){
                    /*
                B4.setIcon(P1Upic);
                B4.setEnabled(true);
                    */
                barr[index]=4;
                }
                else if(index==4){
                    /*
                B5.setIcon(P1Upic);
                B5.setEnabled(true);
                    */
                barr[index]=4;
                }
                else{
                    System.out.println("Kagit Terfi Icon Error Bilgisayar");
                }
            }
            
            
            else if(n==2)
            {
                oyun.cnbgenerator(5);
                oyun.ustaMakas[ccs2b]= new UstaMakas(20,0);
                oyun.bno.set(index, oyun.ustaMakas[ccs2b]);
                ccs2b++;
                System.out.println("UstaMakas index:" + index + oyun.bno.get(index));

                
                if(index==0){
                    /*
                B1.setIcon(S1Upic);
                B1.setEnabled(true);
                    */
                barr[index]=5;
                }
                else if(index==1){
                    /*
                B2.setIcon(S1Upic);
                B2.setEnabled(true);
                    */
                barr[index]=5;
                }
                else if(index==2){
                    /*
                B3.setIcon(S1Upic);
                B3.setEnabled(true);
                    */
                barr[index]=5;
                }
                else if(index==3){
                    /*
                B4.setIcon(S1Upic);
                B4.setEnabled(true);
                    */
                barr[index]=5;
                }
                else if(index==4){
                    /*
                B5.setIcon(S1Upic); // Enabling
                B5.setEnabled(true);
                    */
                barr[index]=5;
                }
                else{
                    System.out.println("Makas Terfi Icon Error Bilgisayar");
                }
            }
            
            else
            {
                System.out.println("Terfi Error Bilgisayar");
            }
            //System.out.println("########### " + oyun.bno.toString());
        } 
        else
        return false;
        
        return false;
    }

    double tskd; // toplam secilen kullanci dayaniklilik  
    double tsbd; // toplam secilen bigisayar dayaniklilik

    public void kimk() // kim kazandi
    {
        klabel.setVisible(true);
        kskLabel.setVisible(true);
        kskLabel.setVisible(true);
        
        if (ske > sbe) {
            System.out.println("Kazanan: Kullanici Kazandi " + ske + " " + sbe);
            keLabel.setText("Etki:" + ske);
            beLabel.setText("Etki:" + sbe);
            klabel.setText("Kullanici Kazandi");
            

            ku.setSkor(1);
            oyun.kno.get(KS).durumGuncelle(sbe, 20);
            oyun.bno.get(x).durumGuncelle(ske, 0); // WOW instead of temp class

        } else if (ske < sbe) {
            System.out.println("Kazanan: Bilgisayar Kazandi " + sbe + " " + ske);
            keLabel.setText("Etki:" + ske);
            beLabel.setText("Etki:" + sbe);
            klabel.setText("Bilgisayar Kazandi");
           oyun.kno.get(KS).durumGuncelle(sbe, 0);
            oyun.bno.get(x).durumGuncelle(ske, 20);
            BO.setSkor(1);



        } else {
            keLabel.setText("Etki:" + ske);
            beLabel.setText("Etki:" + sbe);

                oyun.kno.get(KS).durumGuncelle(sbe, 0); // WOW instead of temp class
                oyun.bno.get(x).durumGuncelle(ske, 0); 


            
            klabel.setText("Kimse Kazanmadi");
            System.out.println("Kazanan: Kimse Yok");
        }
            kskLabel.setText("Skor:" + ku.SkorGoster());
            bskLabel.setText("Skor:" + BO.SkorGoster());
            kdLabel.setText("D:" + oyun.kno.get(KS).getDayanlililk());
            bdLabel.setText("D:" + oyun.bno.get(x).getDayanlililk());
            ksLabel.setText("S:" + oyun.kno.get(KS).getSeviyePuani());
            bsLabel.setText("S:" + oyun.bno.get(x).getSeviyePuani());
        
            System.out.println("Kullanici Ozellikler:");
            oyun.kno.get(KS).nesnePuaniGoster();

            System.out.println("Bilgisayar Ozellikler:");
            oyun.bno.get(x).nesnePuaniGoster();
            
        if(terfi(karr[KS], KS,'k')==true)
        {
            temp = oyun.kno.get(KS);
            //count--;
        }
        
        // Dayaniklik 0 altinda ise sil
        dayanChecker();

        
        
        System.out.println("Hamle:" + tcount + "\n");
        if(tcount==hamleRange)
        {
            System.out.println("----------------------");
            tkimk();
        }
            
        
        terfi(barr[x], x,'b');
        

    }
    
    public int dayanChecker() // Dayan Checker for removing the the element if its ==0
    {
        System.out.println("Dayan Checker Called");
        if(oyun.kno.get(KS).getDayanlililk()<=0)
        {
           karr[KS]=99; 
           Bos bos = new Bos();
           oyun.kno.set(KS, bos);
           System.out.println("Removed from Kullanici");
           
           if(KS==0)
           {
                B1.setVisible(false);
                cn--;
           }

           
           else if(KS==1)
           {
               B2.setVisible(false);
               cn--;
           }
               
           
           else if(KS==2)
           {
               B3.setVisible(false);
               cn--;
           }
               
           
           else if(KS==3)
           {
               B4.setVisible(false);
               cn--;
           }
               
           
           else if(KS==4)
           {
               B5.setVisible(false);
               cn--;
           }
               
           
        }
        
            
            
        if(oyun.bno.get(x).getDayanlililk()<=0)
        {
            barr[x]=99;
            Bos bos = new Bos();
            oyun.bno.set(x, bos);
            System.out.println("Removed from Bilgisayar");
        }
            
            
        return 0;
        
    }
    public int[] Bilrand() { // bilgisayar random, oyun baslamadan

        Random r = new Random();
        int arr[] = new int[5];

        int randomMultipleOfFive = r.nextInt(3); // 0<x<3

        arr[0] = randomMultipleOfFive = r.nextInt(3);

        arr[1] = randomMultipleOfFive = r.nextInt(3);
        arr[2] = randomMultipleOfFive = r.nextInt(3);
        arr[3] = randomMultipleOfFive = r.nextInt(3);
        arr[4] = randomMultipleOfFive = r.nextInt(3);

        return arr;
    }
    int cn=5;
    
    private void countChecker() {
        if (count >= cn) {
            B1.setEnabled(true);
            B5.setEnabled(true);
            B4.setEnabled(true);
            B3.setEnabled(true);
            B2.setEnabled(true);
            count = 0;
        }

    }



    private int[] nesneGoster() {
        int SecilenNesneAdi[] = new int[5];

        //temp =  oyun.kno.get(0);
        //System.out.println("SSSSSS" + temp);

        for (int i = 0; i < oyun.kno.size(); i++) {

            String word = "" + oyun.kno.get(i);
            if (word.contains("Tas")) {
                SecilenNesneAdi[i] = 0;
            } else if (word.contains("Kagit")) {
                SecilenNesneAdi[i] = 1;
            } else if (word.contains("Makas")) {
                SecilenNesneAdi[i] = 2;
            } else {
                System.out.println("Kullanici Elindeki Hatali");
            }

        }

        /*    
        for (int i = 0; i < kn.size(); i++) {
            System.out.println("Nesne arraylist: " + kn.get(i));  
    }
         */
        return SecilenNesneAdi;
    }
    int KS; // Kullanici Button Secilen

    double skd; // Secilen kullanci dayanaklilik
    double ske; // Secilen kullanci Etki
    
    Nesne temp;

    private void B1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B1ActionPerformed
        B1.setEnabled(false);
        KS = 0;
        

        

        bilplayer();

        temp= oyun.kno.get(0);
        ske = temp.etkiHesapla(bsecilen);

        skd = temp.getDayanlililk();

        count++;
        tcount++;
        countChecker();
        if(karr[KS]!=99)
        BCenter.setIcon(B1.getIcon());
        
        else
        {

           B1.setVisible(false);
        }
        
        kimk();
        // remove if dayan == 0 method

            
        
        

    }//GEN-LAST:event_B1ActionPerformed

    int Nesne[] = new int[5];

    private void B5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B5ActionPerformed
        B5.setEnabled(false);
        KS = 4;
        bilplayer();

        Nesne temp = oyun.kno.get(4);
        ske = temp.etkiHesapla(bsecilen);
        skd = temp.getDayanlililk();

        count++;
        tcount++;
        countChecker();
        
        if(karr[KS]!=99)
        BCenter.setIcon(B5.getIcon());
        
        else
        {
 
           B5.setVisible(false);
        }
        
        kimk();

            

    }//GEN-LAST:event_B5ActionPerformed

    private void B4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B4ActionPerformed
        B4.setEnabled(false);
        KS = 3;
        bilplayer();

        Nesne temp = oyun.kno.get(3);
        ske = temp.etkiHesapla(bsecilen);
        skd = temp.getDayanlililk();

        count++;
        tcount++;
        countChecker();
        
        if(karr[KS]!=99)
        BCenter.setIcon(B4.getIcon());
        
        else
        {
            B4.setVisible(false);
        }
        
        kimk();


    }//GEN-LAST:event_B4ActionPerformed

    private void B3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B3ActionPerformed
        B3.setEnabled(false);
        KS = 2;
        bilplayer();

        Nesne temp = oyun.kno.get(2);
        ske = temp.etkiHesapla(bsecilen);

        skd = temp.getDayanlililk();

        count++;
        tcount++;
        countChecker();
        
        if(karr[KS]!=99)
        BCenter.setIcon(B3.getIcon());
        
        else
        {
           B3.setVisible(false);
 
        }
        
        
        kimk();

    }//GEN-LAST:event_B3ActionPerformed

    private void B2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B2ActionPerformed
        B2.setEnabled(false);
        KS = 1;
        bilplayer();

        Nesne temp = oyun.kno.get(1);
        ske = temp.etkiHesapla(bsecilen);
        skd = temp.getDayanlililk();

        count++;
        tcount++;
        countChecker();
        
        if(karr[KS]!=99)
        BCenter.setIcon(B2.getIcon());
        
        else
        {

           B2.setVisible(false);
        }
        
        
        kimk();

    }//GEN-LAST:event_B2ActionPerformed

    private void BCenter1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCenter1ActionPerformed

        if (fcount == 1) {
            B1.setIcon(R1pic);
            karr[0] = 0;
            oyun.cngenerator(0);
            fcount++;
        } else if (fcount == 2) {
            B2.setIcon(R1pic);
            karr[1] = 0;
            oyun.cngenerator(0);
            fcount++;
        } else if (fcount == 3) {
            B3.setIcon(R1pic);
            karr[2] = 0;
            oyun.cngenerator(0);
            fcount++;
        } else if (fcount == 4) {
            B4.setIcon(R1pic);
            karr[3] = 0;
            oyun.cngenerator(0);
            fcount++;
        } else {
            B5.setIcon(R1pic);
            karr[4] = 0;
            oyun.cngenerator(0);
            BgetterX(karr);
            BCenter1.setVisible(false);
            BCenter2.setVisible(false);
            BCenter3.setVisible(false);
            fcount++;
        }

    }//GEN-LAST:event_BCenter1ActionPerformed

    private void BCenter3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCenter3ActionPerformed

        if (fcount == 1) {
            B1.setIcon(S1pic);
            karr[0] = 2;
            oyun.cngenerator(2);
            fcount++;
        } else if (fcount == 2) {
            B2.setIcon(S1pic);
            karr[1] = 2;
            oyun.cngenerator(2);
            fcount++;
        } else if (fcount == 3) {
            B3.setIcon(S1pic);
            karr[2] = 2;
            oyun.cngenerator(2);
            fcount++;
        } else if (fcount == 4) {
            B4.setIcon(S1pic);
            karr[3] = 2;
            oyun.cngenerator(2);
            fcount++;
        } else {
            B5.setIcon(S1pic);
            karr[4] = 2;
            oyun.cngenerator(2);
            BgetterX(karr);
            BCenter1.setVisible(false);
            BCenter2.setVisible(false);
            BCenter3.setVisible(false);
            fcount++;
        }
    }//GEN-LAST:event_BCenter3ActionPerformed

    private void BCenter2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCenter2ActionPerformed
        if (fcount == 1) {
            B1.setIcon(P1pic);
            karr[0] = 1;
            oyun.cngenerator(1);
            fcount++;
        } else if (fcount == 2) {
            B2.setIcon(P1pic);
            karr[1] = 1;
            oyun.cngenerator(1);
            fcount++;
        } else if (fcount == 3) {
            B3.setIcon(P1pic);
            karr[2] = 1;
            oyun.cngenerator(1);
            fcount++;
        } else if (fcount == 4) {
            B4.setIcon(P1pic);
            karr[3] = 1;
            oyun.cngenerator(1);
            fcount++;
        } else {
            B5.setIcon(P1pic);
            karr[4] = 1;
            oyun.cngenerator(1);
            BgetterX(karr);
            BCenter1.setVisible(false);
            BCenter2.setVisible(false);
            BCenter3.setVisible(false);
            fcount++;
        }

    }//GEN-LAST:event_BCenter2ActionPerformed

    private void BCenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCenterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BCenterActionPerformed

    private void BCenterbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCenterbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BCenterbActionPerformed
    
    int hamleRange=0;
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        hamleRange=Integer.parseInt(jTextField1.getText());
        System.out.println("hamle range:" + hamleRange);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Buttoner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Buttoner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Buttoner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Buttoner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Buttoner().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B1;
    private javax.swing.JButton B2;
    private javax.swing.JButton B3;
    private javax.swing.JButton B4;
    private javax.swing.JButton B5;
    private javax.swing.JButton BCenter;
    private javax.swing.JButton BCenter1;
    private javax.swing.JButton BCenter2;
    private javax.swing.JButton BCenter3;
    private javax.swing.JButton BCenterb;
    private javax.swing.JLabel bdLabel;
    private javax.swing.JLabel beLabel;
    private javax.swing.JLabel bsLabel;
    private javax.swing.JLabel bskLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel kdLabel;
    private javax.swing.JLabel keLabel;
    private javax.swing.JLabel klabel;
    private javax.swing.JLabel ksLabel;
    private javax.swing.JLabel kskLabel;
    // End of variables declaration//GEN-END:variables
}
